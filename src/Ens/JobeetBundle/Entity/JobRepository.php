<?php

namespace Ens\JobeetBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * JobRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JobRepository extends EntityRepository
{
    /**
     * Return query result containing active jobs
     * If a category_id is present, only return active
     * jobs in that category.
     */
    public function getActiveJobs($category_id = null, $max = null)
    {
        $querybuilder = $this->createQueryBuilder('j')
            ->where('j.expires_at > :date')
            ->setParameter('date', date('Y-m-d H:i:s', time()))
            ->orderBy('j.expires_at', 'DESC');

        if($max)
        {
            $querybuilder->setMaxResults($max);
        }

        if($category_id)
        {
            $querybuilder->andWhere('j.category = :category_id')
                ->setParameter('category_id', $category_id);
        }

        $query = $querybuilder->getQuery();
    
        return $query->getResult();
    }

    /**
     * Return single active job for job_id.
     * If the job is not active, then error.
     */
    public function getActiveJob($id)
    {
        $query = $this->createQueryBuilder('j')
            ->where('j.id = :id')
            ->setParameter('id', $id)
            ->andWhere('j.expires_at > :date')
            ->setParameter('date', date('Y-m-d H:i:s', time()))
            ->setMaxResults(1)
            ->getQuery();

        try {
            $job = $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            $job = null;
        } 

        return $job;
    }
}
